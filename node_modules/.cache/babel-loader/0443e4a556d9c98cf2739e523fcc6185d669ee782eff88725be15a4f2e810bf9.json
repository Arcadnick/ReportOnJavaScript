{"ast":null,"code":"var _jsxFileName = \"/Users/arcadnick/js/ReportOnJavaScript/my-website/src/pages/Crossword.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CrosswordGrid from \"@/components/CrosswordGrid\";\nimport CluesPanel from \"@/components/CluesPanel\";\nimport { gridData, words } from \"@/lib/crosswordData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Crossword() {\n  _s();\n  const [activeClue, setActiveClue] = useState(null);\n  const [completedWords, setCompletedWords] = useState(new Set());\n  const [status, setStatus] = useState({\n    message: \"\",\n    type: \"hidden\"\n  });\n  const totalWords = words.horizontal.length + words.vertical.length;\n  const handleWordComplete = word => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.add(word);\n      return newSet;\n    });\n  };\n  const handleWordIncomplete = word => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(word);\n      return newSet;\n    });\n  };\n  const resetPuzzle = () => {\n    setCompletedWords(new Set());\n    setStatus({\n      message: \"\",\n      type: \"hidden\"\n    });\n  };\n  const checkAnswers = (correctCells, incorrectCells, emptyCells) => {\n    if (incorrectCells === 0 && emptyCells === 0) {\n      setStatus({\n        message: \"Поздравляем! Все ответы верны!\",\n        type: \"success\"\n      });\n    } else if (incorrectCells > 0) {\n      setStatus({\n        message: `${incorrectCells} букв неверны. Попробуйте еще раз!`,\n        type: \"error\"\n      });\n    } else {\n      setStatus({\n        message: \"Кроссворд не завершен. Продолжайте заполнять!\",\n        type: \"warning\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-background font-sans text-gray-800\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-primary mb-2 bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary\",\n          children: \"CSS Animation Crossword Puzzle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted-foreground\",\n          children: \"Test your knowledge of CSS animations while enjoying interactive examples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col lg:flex-row gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(CrosswordGrid, {\n          gridData: gridData,\n          activeClue: activeClue,\n          completedWords: completedWords,\n          onWordComplete: handleWordComplete,\n          onWordIncomplete: handleWordIncomplete,\n          onCheckAnswers: checkAnswers,\n          onResetPuzzle: resetPuzzle,\n          totalWords: totalWords,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CluesPanel, {\n          words: words,\n          activeClue: activeClue,\n          setActiveClue: setActiveClue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Crossword, \"9xA2vVt7JXJSlsgqqWFVdTuZ1oM=\");\n_c = Crossword;\nvar _c;\n$RefreshReg$(_c, \"Crossword\");","map":{"version":3,"names":["useState","CrosswordGrid","CluesPanel","gridData","words","jsxDEV","_jsxDEV","Crossword","_s","activeClue","setActiveClue","completedWords","setCompletedWords","Set","status","setStatus","message","type","totalWords","horizontal","length","vertical","handleWordComplete","word","prev","newSet","add","handleWordIncomplete","delete","resetPuzzle","checkAnswers","correctCells","incorrectCells","emptyCells","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onWordComplete","onWordIncomplete","onCheckAnswers","onResetPuzzle","_c","$RefreshReg$"],"sources":["/Users/arcadnick/js/ReportOnJavaScript/my-website/src/pages/Crossword.js"],"sourcesContent":["import { useState } from \"react\";\nimport CrosswordGrid from \"@/components/CrosswordGrid\";\nimport CluesPanel from \"@/components/CluesPanel\";\nimport { gridData, words } from \"@/lib/crosswordData\";\n\nexport default function Crossword() {\n    const [activeClue, setActiveClue] = useState(null);\n\n    const [completedWords, setCompletedWords] = useState(new Set());\n    const [status, setStatus] = useState({\n        message: \"\",\n        type: \"hidden\"\n    });\n\n    const totalWords = words.horizontal.length + words.vertical.length;\n\n    const handleWordComplete = (word) => {\n        setCompletedWords(prev => {\n            const newSet = new Set(prev);\n            newSet.add(word);\n            return newSet;\n        });\n    };\n\n    const handleWordIncomplete = (word) => {\n        setCompletedWords(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(word);\n            return newSet;\n        });\n    };\n\n    const resetPuzzle = () => {\n        setCompletedWords(new Set());\n        setStatus({\n            message: \"\",\n            type: \"hidden\"\n        });\n    };\n\n    const checkAnswers = (correctCells, incorrectCells, emptyCells) => {\n        if (incorrectCells === 0 && emptyCells === 0) {\n            setStatus({\n                message: \"Поздравляем! Все ответы верны!\",\n                type: \"success\"\n            });\n        } else if (incorrectCells > 0) {\n            setStatus({\n                message: `${incorrectCells} букв неверны. Попробуйте еще раз!`,\n                type: \"error\"\n            });\n        } else {\n            setStatus({\n                message: \"Кроссворд не завершен. Продолжайте заполнять!\",\n                type: \"warning\"\n            });\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-background font-sans text-gray-800\">\n            <div className=\"container mx-auto px-4 py-8\">\n                <header className=\"mb-8 text-center\">\n                    <h1 className=\"text-3xl font-bold text-primary mb-2 bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary\">\n                        CSS Animation Crossword Puzzle\n                    </h1>\n                    <p className=\"text-muted-foreground\">\n                        Test your knowledge of CSS animations while enjoying interactive examples\n                    </p>\n                </header>\n\n                <div className=\"flex flex-col lg:flex-row gap-8\">\n                    <CrosswordGrid\n                        gridData={gridData}\n                        activeClue={activeClue}\n                        completedWords={completedWords}\n                        onWordComplete={handleWordComplete}\n                        onWordIncomplete={handleWordIncomplete}\n                        onCheckAnswers={checkAnswers}\n                        onResetPuzzle={resetPuzzle}\n                        totalWords={totalWords}\n                        status={status}\n                    />\n\n                    <CluesPanel\n                        words={words}\n                        activeClue={activeClue}\n                        setActiveClue={setActiveClue}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}