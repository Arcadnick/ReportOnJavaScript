{"ast":null,"code":"var _jsxFileName = \"/Users/arcadnick/js/ReportOnJavaScript/my-website/src/pages/CrosswordAdvanced.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/CrosswordAdvanced.css\";\nimport CrosswordGrid from \"../components/CrosswordGrid\";\nimport CluesPanel from \"../components/CluesPanel\";\nimport AnimationExamples from \"../components/AnimationExamples\";\nimport { gridData, words } from \"../components/crosswordData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrosswordAdvanced() {\n  _s();\n  const [activeClue, setActiveClue] = useState(null);\n  const [showAnimationExamples, setShowAnimationExamples] = useState(false);\n  const [completedWords, setCompletedWords] = useState(new Set());\n  const [status, setStatus] = useState({\n    message: \"\",\n    type: \"hidden\"\n  });\n  const totalWords = words.horizontal.length + words.vertical.length;\n\n  // Если все слова завершены, показываем примеры анимаций\n  useEffect(() => {\n    if (completedWords.size === totalWords) {\n      setShowAnimationExamples(true);\n    }\n  }, [completedWords, totalWords]);\n  const handleWordComplete = word => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.add(word);\n      return newSet;\n    });\n  };\n  const handleWordIncomplete = word => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(word);\n      return newSet;\n    });\n  };\n  const resetPuzzle = () => {\n    setCompletedWords(new Set());\n    setStatus({\n      message: \"\",\n      type: \"hidden\"\n    });\n    setShowAnimationExamples(false);\n  };\n  const checkAnswers = (correctCells, incorrectCells, emptyCells) => {\n    if (incorrectCells === 0 && emptyCells === 0) {\n      setStatus({\n        message: \"Поздравляем! Все ответы верны!\",\n        type: \"success\"\n      });\n      // Показываем примеры анимаций при правильном заполнении\n      setShowAnimationExamples(true);\n    } else if (incorrectCells > 0) {\n      setStatus({\n        message: `${incorrectCells} букв неверны. Попробуйте еще раз!`,\n        type: \"error\"\n      });\n    } else {\n      setStatus({\n        message: \"Кроссворд не завершен. Продолжайте заполнять!\",\n        type: \"warning\"\n      });\n    }\n  };\n  const toggleAnimationExamples = () => {\n    setShowAnimationExamples(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crossword-advanced-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crossword\",\n        className: \"nav-link\",\n        children: \"\\u041A\\u0440\\u043E\\u0441\\u0441\\u0432\\u043E\\u0440\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/examples\",\n        className: \"nav-link active\",\n        children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/files\",\n        className: \"nav-link\",\n        children: \"\\u0424\\u0430\\u0439\\u043B\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"crossword-advanced-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"crossword-advanced-title\",\n        children: \"\\u041A\\u0440\\u043E\\u0441\\u0441\\u0432\\u043E\\u0440\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crossword-advanced-content\",\n      children: [/*#__PURE__*/_jsxDEV(CrosswordGrid, {\n        gridData: gridData,\n        activeClue: activeClue,\n        completedWords: completedWords,\n        onWordComplete: handleWordComplete,\n        onWordIncomplete: handleWordIncomplete,\n        onCheckAnswers: checkAnswers,\n        onResetPuzzle: resetPuzzle,\n        totalWords: totalWords,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CluesPanel, {\n        words: words,\n        activeClue: activeClue,\n        setActiveClue: setActiveClue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animation-examples-toggle\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-examples-button\",\n        onClick: toggleAnimationExamples,\n        children: showAnimationExamples ? \"Скрыть примеры анимаций\" : \"Показать примеры анимаций\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), showAnimationExamples && /*#__PURE__*/_jsxDEV(AnimationExamples, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n_s(CrosswordAdvanced, \"DRMyNEFJX/zB/Y0Re1XDoudD0WQ=\");\n_c = CrosswordAdvanced;\nvar _c;\n$RefreshReg$(_c, \"CrosswordAdvanced\");","map":{"version":3,"names":["React","useState","useEffect","CrosswordGrid","CluesPanel","AnimationExamples","gridData","words","jsxDEV","_jsxDEV","CrosswordAdvanced","_s","activeClue","setActiveClue","showAnimationExamples","setShowAnimationExamples","completedWords","setCompletedWords","Set","status","setStatus","message","type","totalWords","horizontal","length","vertical","size","handleWordComplete","word","prev","newSet","add","handleWordIncomplete","delete","resetPuzzle","checkAnswers","correctCells","incorrectCells","emptyCells","toggleAnimationExamples","className","children","Link","to","fileName","_jsxFileName","lineNumber","columnNumber","onWordComplete","onWordIncomplete","onCheckAnswers","onResetPuzzle","onClick","_c","$RefreshReg$"],"sources":["/Users/arcadnick/js/ReportOnJavaScript/my-website/src/pages/CrosswordAdvanced.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/CrosswordAdvanced.css\";\nimport CrosswordGrid from \"../components/CrosswordGrid\";\nimport CluesPanel from \"../components/CluesPanel\";\nimport AnimationExamples from \"../components/AnimationExamples\";\nimport { gridData, words } from \"../components/crosswordData\";\n\nexport default function CrosswordAdvanced() {\n  const [activeClue, setActiveClue] = useState(null);\n  const [showAnimationExamples, setShowAnimationExamples] = useState(false);\n  const [completedWords, setCompletedWords] = useState(new Set());\n  const [status, setStatus] = useState({\n    message: \"\",\n    type: \"hidden\"\n  });\n\n  const totalWords = words.horizontal.length + words.vertical.length;\n  \n  // Если все слова завершены, показываем примеры анимаций\n  useEffect(() => {\n    if (completedWords.size === totalWords) {\n      setShowAnimationExamples(true);\n    }\n  }, [completedWords, totalWords]);\n  \n  const handleWordComplete = (word) => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.add(word);\n      return newSet;\n    });\n  };\n\n  const handleWordIncomplete = (word) => {\n    setCompletedWords(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(word);\n      return newSet;\n    });\n  };\n\n  const resetPuzzle = () => {\n    setCompletedWords(new Set());\n    setStatus({\n      message: \"\",\n      type: \"hidden\"\n    });\n    setShowAnimationExamples(false);\n  };\n\n  const checkAnswers = (correctCells, incorrectCells, emptyCells) => {\n    if (incorrectCells === 0 && emptyCells === 0) {\n      setStatus({\n        message: \"Поздравляем! Все ответы верны!\",\n        type: \"success\"\n      });\n      // Показываем примеры анимаций при правильном заполнении\n      setShowAnimationExamples(true);\n    } else if (incorrectCells > 0) {\n      setStatus({\n        message: `${incorrectCells} букв неверны. Попробуйте еще раз!`,\n        type: \"error\"\n      });\n    } else {\n      setStatus({\n        message: \"Кроссворд не завершен. Продолжайте заполнять!\",\n        type: \"warning\"\n      });\n    }\n  };\n\n  const toggleAnimationExamples = () => {\n    setShowAnimationExamples(prev => !prev);\n  };\n\n  return (\n      <div className=\"crossword-advanced-container\">\n        <nav className=\"navbar\">\n          <Link to=\"/\" className=\"nav-link\">Главная</Link>\n          <Link to=\"/crossword\" className=\"nav-link\">Кроссворд</Link>\n          <Link to=\"/examples\" className=\"nav-link active\">Примеры</Link>\n          <Link to=\"/files\" className=\"nav-link\">Файлы</Link>\n        </nav>\n        \n        <header className=\"crossword-advanced-header\">\n          <h1 className=\"crossword-advanced-title\">\n            Кроссворд\n          </h1>\n        </header>\n\n        <div className=\"crossword-advanced-content\">\n          <CrosswordGrid\n              gridData={gridData}\n              activeClue={activeClue}\n              completedWords={completedWords}\n              onWordComplete={handleWordComplete}\n              onWordIncomplete={handleWordIncomplete}\n              onCheckAnswers={checkAnswers}\n              onResetPuzzle={resetPuzzle}\n              totalWords={totalWords}\n              status={status}\n          />\n\n          <CluesPanel\n              words={words}\n              activeClue={activeClue}\n              setActiveClue={setActiveClue}\n          />\n        </div>\n\n        <div className=\"animation-examples-toggle\">\n          <button\n              className=\"toggle-examples-button\"\n              onClick={toggleAnimationExamples}\n          >\n            {showAnimationExamples ? \"Скрыть примеры анимаций\" : \"Показать примеры анимаций\"}\n          </button>\n        </div>\n\n        {showAnimationExamples && (\n            <AnimationExamples/>\n        )}\n      </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}